syntax = "proto3";

package api.auth.v1;

import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";

option go_package = "rshelekhov.sso.api.auth.v1;authv1";

// Platform options for user devices
enum Platform {
  // Default unspecified value
  PLATFORM_UNSPECIFIED = 0;

  // Web platform
  PLATFORM_WEB = 1;

  // iOS platform
  PLATFORM_IOS = 2;

  // Android platform
  PLATFORM_ANDROID = 3;
}

// Device fingerprint for security and session management
message UserDeviceData {
  // User agent string from the device
  string user_agent = 1 [
    (buf.validate.field).required = true
  ];

  // User's IP address
  string ip = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.ip = true
  ];

  // Platform type (Web, iOS, Android)
  Platform platform = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).enum.defined_only = true
  ];

  // Only one of app_version or browser_version should be set based on the platform
  oneof version {
    option (buf.validate.oneof).required = true;

    // Mobile app version (for iOS/Android)
    string app_version = 4;

    // Browser version (for web platform)
    string browser_version = 5;
  }
}

// Token information for authentication
message TokenData {
  // JWT access token for API authentication
  string access_token = 1;

  // Refresh token for obtaining new access tokens
  string refresh_token = 2;

  // Cookie domain for web clients
  string domain = 3;

  // Cookie path for web clients
  string path = 4;

  // When access token expires
  google.protobuf.Timestamp expires_at = 5;

  // Whether cookies should be HTTP-only
  bool http_only = 6;

  // Extra fields for application-specific data
  map<string, string> additional_fields = 7;
}


// JSON Web Key for JWT signature verification
message JWK {
  // Cryptographic algorithm (e.g., "RS256")
  string alg = 1;

  // Key type (e.g., "RSA")
  string kty = 2;

  // Key usage (e.g., "sig" for signature)
  string use = 3;

  // Key identifier for key rotation
  string kid = 4;

  // RSA modulus (base64url encoded)
  string n = 5;

  // RSA exponent (base64url encoded)
  string e = 6;
}